#!/bin/sh
if [[ -z "PURESHELL_ROOT" ]]; then
    echo -e "Error: Please configure PureShell root directory."
    exit 0
fi
if [[ -z "PURESHELL_PLATFORM" ]]; then
    echo -e "Error: Please configure PureShell platform."
    exit 0
fi
if [[ -z "PURESHELL_PLATFORM_VERSION" ]]; then
    echo -e "Error: Please configure PureShell platform version."
    exit 0
fi

package=pureshell

# Get opts:
# -d <pureshell_dir>
# -p <platform>
# -v <platform_version>
while true $# -gt 0; do
        case "$1" in
                -h|--help)
                        echo "$package - shell server provisioner"
                        echo " "
                        echo "$package [options] [packages]"
                        echo " "
                        echo "options:"
                        echo -e "\t -h, --help  show brief help"
                        echo -e "\t -f, --force try force install"
                        echo "arguments:"
                        echo -e "\t git: Git version control"
                        echo -e "\t nano: Nano"
                        echo -e "\t php56: PHP 5.6"
                        echo -e "\t vim: Vim"
                        echo -e "\t Webtatic: Webtatic Yum repositorys"
                        echo -e "\t yum-plugin-replace: Yum Plugin Replace"
                        exit 0
                        ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            exit 1
            ;;
        :)
            echo "Option -$OPTARG requires an argument." >&2
            exit 1
            ;;
        *)
                break
                ;;
    esac
done

pureshell_install () {

    # Set Vars
    PACKAGE=$1

    # Install package
    # if ! rpm -qa | grep -qw $PACKAGE; then
        echo -e "\n--- Installing ${PACKAGE} ---\n"
        . "${PURESHELL_ROOT}${PURESHELL_PLATFORM}/${PACKAGE}".sh
    # else
    #   echo -e "\n--- ${PACKAGE} already installed ---\n"
    # fi
}

pureshell_install $1